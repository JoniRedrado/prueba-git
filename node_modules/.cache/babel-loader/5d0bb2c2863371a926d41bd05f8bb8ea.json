{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joni\\\\Desktop\\\\Henry\\\\M2\\\\prueba-git\\\\prueba-git\\\\src\\\\components\\\\CreateFutbolista\\\\CreateFutbolista.jsx\";\n/* 6️⃣ ***COMPONENTE CreateFutbolista*** 6️⃣\r\n\r\nImplementar el componente CreateFutbolista. Este consistirá en un formulario controlado con estados de react.\r\n📢¡Sigue las instrucciones de los tests!📢\r\n\r\nREQUISITOS\r\n🟢 Aquí tendrás que renderizar una serie de elementos HTML con distintos atibutos e información dentro.\r\n\r\n🟢 Debes manejar cada uno de los inputs de tu formulario mediante un estado local llamado \"input\".\r\n\r\n🟢 La información del formulario se debe despachar al estado global cuando se hace un submit.\r\n\r\n🟢 Debes manejar los errores que pueden tener los inputs del formulario.\r\n\r\nIMPORTANTE\r\n❗Importar las actions como Object Modules, ¡sino los test no funcionarán!\r\n❗Este componente debe ser funcional.\r\n❗¡Puedes implementar el manejo de errores como mejor prefieras! Sólo recuerda renderizar el error apropiado en cada caso.\r\n❗NO hacer un destructuring de los hooks de React, debes utilizarlos con la siguiente forma:\r\n      - 'React.useState'\r\n      - 'React.useEffect'\r\n*/\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateFutbolista = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 11\n  }, this);\n};\n_c = CreateFutbolista;\nexport default CreateFutbolista;\nvar _c;\n$RefreshReg$(_c, \"CreateFutbolista\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","CreateFutbolista","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Joni/Desktop/Henry/M2/prueba-git/prueba-git/src/components/CreateFutbolista/CreateFutbolista.jsx"],"sourcesContent":["/* 6️⃣ ***COMPONENTE CreateFutbolista*** 6️⃣\r\n\r\nImplementar el componente CreateFutbolista. Este consistirá en un formulario controlado con estados de react.\r\n📢¡Sigue las instrucciones de los tests!📢\r\n\r\nREQUISITOS\r\n🟢 Aquí tendrás que renderizar una serie de elementos HTML con distintos atibutos e información dentro.\r\n\r\n🟢 Debes manejar cada uno de los inputs de tu formulario mediante un estado local llamado \"input\".\r\n\r\n🟢 La información del formulario se debe despachar al estado global cuando se hace un submit.\r\n\r\n🟢 Debes manejar los errores que pueden tener los inputs del formulario.\r\n\r\nIMPORTANTE\r\n❗Importar las actions como Object Modules, ¡sino los test no funcionarán!\r\n❗Este componente debe ser funcional.\r\n❗¡Puedes implementar el manejo de errores como mejor prefieras! Sólo recuerda renderizar el error apropiado en cada caso.\r\n❗NO hacer un destructuring de los hooks de React, debes utilizarlos con la siguiente forma:\r\n      - 'React.useState'\r\n      - 'React.useEffect'\r\n*/\r\n\r\nimport React from 'react';\r\n\r\nconst CreateFutbolista = () => {\r\n   return <div></div>;\r\n};\r\n\r\nexport default CreateFutbolista;\r\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAC5B,oBAAOD,OAAA;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAU,CAAC;AACrB,CAAC;AAACC,EAAA,GAFIL,gBAAgB;AAItB,eAAeA,gBAAgB;AAAC,IAAAK,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}